{"version":3,"sources":["components/Header/Menu/burger-menu.tsx","components/Header/Switch/switcher.tsx","assets/cards.tsx","components/Header/Menu/menu-itams.tsx","components/Header/header.tsx","components/MainPage/Card.tsx","components/MainPage/CardGrid.tsx","components/Footer/footer.tsx","components/Stats/stats.tsx","components/GameOver/GameOver.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BurgerMenu","className","onClick","props","clickHandler","this","isShow","React","Component","Switcher","gameModeName","changeGameModeApp","type","onChange","changeGameMode","cardCategories","nameCategory","image","cards","word","translation","audioSrc","MenuItems","state","activePage","changeCategory","setState","menuItems","map","item","toggleClass","src","Header","page","openCloseMenu","menuItemsHandler","gameMode","Card","playMode","isFlipped","disabled","title","activeGameMode","nameButtonGame","compaireCurrentSound","playAudio","audio","Audio","currentTime","play","flippedButton","languageTittle","displayNone","cardModePlay","onMouseLeave","clickCard","imgSrc","CardGrid","startGameActivePage","startGameactiveGameMode","currentSound","isGameOver","opensCard","sound","arrSoudsCategory","prevProps","prevState","playCurrentSound","length","countMistakes","console","log","itemsCategories","startGame","nextProps","Footer","href","target","rel","Stats","stringTable","allStringTable","indexInCategory","findNameCategory","findIndex","element","lendsCards","i","nameCat","DEFAULT","push","GameOver","massage","imageGameOver","soundGameOver","mistakes","setTimeout","TRAIN_GAME_MODE","DEFAULT_PAGE","App","indexCategory","sort","Math","random","category","mainSection","getItems","getCards","getSoudsCategory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","history","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e121bad.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './menu.scss';\r\n\r\ninterface MyProps {\r\n  isShow: boolean,\r\n  clickHandler: () => void\r\n}\r\ninterface MyState {\r\n\r\n}\r\n\r\nexport default class BurgerMenu extends React.Component<MyProps, MyState> {\r\n\r\n  // constructor(props: any){\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     isShow: false\r\n  //   }\r\n  // }\r\n  // openCloseMenu() {\r\n  //   console.log('menu open');\r\n  //   if (this.state.isShow){\r\n  //     this.setState({isShow: false})\r\n  //   } else {\r\n  //     this.setState({isShow: true})\r\n  //   }\r\n  // }\r\n\r\n  render(){\r\n    return (\r\n      <div className='burger' onClick={()=>this.props.clickHandler()}>  \r\n        <span className={`burger__line ${this.props.isShow ? 'burger__line__active' : ''}`} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\n\r\nimport './switcher.scss';\r\n\r\ninterface MyProps {\r\n  changeGameModeApp: (gameMode: string)=>void,\r\n  gameModeName: string\r\n}\r\ninterface MyState {\r\n}\r\n\r\nexport default class Switcher extends React.Component<MyProps, MyState> {\r\n\r\n  changeGameMode() {\r\n    if (this.props.gameModeName === 'train' ){\r\n      this.props.changeGameModeApp('play');\r\n    } else {\r\n      this.props.changeGameModeApp('train');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <label className=\"switch\">\r\n        <input type=\"checkbox\" onChange={() => this.changeGameMode()} />\r\n        <span className=\"slider round train\">\r\n          <p className='game-mode'>{this.props.gameModeName}</p>\r\n        </span>\r\n      </label>\r\n    )\r\n  }\r\n}","export let cardCategories = [\n  {\n    nameCategory: 'Action (set A)',\n    image: 'img/dance.jpg'\n  },\n  {\n    nameCategory: 'Action (set B)',\n    image: 'img/open.jpg'\n  },\n  {\n    nameCategory: 'Animal (set A)',\n    image: 'img/cat.jpg'\n  },\n  {\n    nameCategory: 'Animal (set B)',\n    image: 'img/bird.jpg'\n  },\n  {\n    nameCategory: 'Clothes',\n    image: 'img/skirt.jpg'\n  },\n  {\n    nameCategory: 'Emotions',\n    image: 'img/happy.jpg'\n  },\n  {\n    nameCategory: 'Insects',\n    image: 'img/butterfly.jpg'\n  },\n  {\n    nameCategory: 'Сutlery',\n    image: 'img/cup.jpg'\n  }\n];\n\nexport const cards = [ \n  [\n    {\n      word: 'cry',\n      translation: 'плакать',\n      image: 'img/cry.jpg',\n      audioSrc: 'audio/cry.mp3'\n    },\n    {\n      word: 'dance',\n      translation: 'танцевать',\n      image: 'img/dance.jpg',\n      audioSrc: 'audio/dance.mp3'\n    },\n    {\n      word: 'dive',\n      translation: 'нырять',\n      image: 'img/dive.jpg',\n      audioSrc: 'audio/dive.mp3'\n    },\n    {\n      word: 'draw',\n      translation: 'рисовать',\n      image: 'img/draw.jpg',\n      audioSrc: 'audio/draw.mp3'\n    },\n    {\n      word: 'fish',\n      translation: 'ловить рыбу',\n      image: 'img/fish.jpg',\n      audioSrc: 'audio/fish.mp3'\n    },\n    {\n      word: 'fly',\n      translation: 'летать',\n      image: 'img/fly.jpg',\n      audioSrc: 'audio/fly.mp3'\n    },\n    {\n      word: 'hug',\n      translation: 'обнимать',\n      image: 'img/hug.jpg',\n      audioSrc: 'audio/hug.mp3'\n    },\n    {\n      word: 'jump',\n      translation: 'прыгать',\n      image: 'img/jump.jpg',\n      audioSrc: 'audio/jump.mp3'\n    }\n  ],\n  [\n    {\n      word: 'open',\n      translation: 'открывать',\n      image: 'img/open.jpg',\n      audioSrc: 'audio/open.mp3'\n    },\n    {\n      word: 'play',\n      translation: 'играть',\n      image: 'img/play.jpg',\n      audioSrc: 'audio/play.mp3'\n    },\n    {\n      word: 'point',\n      translation: 'указывать',\n      image: 'img/point.jpg',\n      audioSrc: 'audio/point.mp3'\n    },\n    {\n      word: 'ride',\n      translation: 'ездить',\n      image: 'img/ride.jpg',\n      audioSrc: 'audio/ride.mp3'\n    },\n    {\n      word: 'run',\n      translation: 'бегать',\n      image: 'img/run.jpg',\n      audioSrc: 'audio/run.mp3'\n    },\n    {\n      word: 'sing',\n      translation: 'петь',\n      image: 'img/sing.jpg',\n      audioSrc: 'audio/sing.mp3'\n    },\n    {\n      word: 'skip',\n      translation: 'пропускать, прыгать',\n      image: 'img/skip.jpg',\n      audioSrc: 'audio/skip.mp3'\n    },\n    {\n      word: 'swim',\n      translation: 'плавать',\n      image: 'img/swim.jpg',\n      audioSrc: 'audio/swim.mp3'\n    }\n  ],\n  [\n    {\n      word: 'cat',\n      translation: 'кот',\n      image: 'img/cat.jpg',\n      audioSrc: 'audio/cat.mp3'\n    },\n    {\n      word: 'chick',\n      translation: 'цыплёнок',\n      image: 'img/chick.jpg',\n      audioSrc: 'audio/chick.mp3'\n    },\n    {\n      word: 'chicken',\n      translation: 'курица',\n      image: 'img/chicken.jpg',\n      audioSrc: 'audio/chicken.mp3'\n    },\n    {\n      word: 'dog',\n      translation: 'собака',\n      image: 'img/dog.jpg',\n      audioSrc: 'audio/dog.mp3'\n    },\n    {\n      word: 'horse',\n      translation: 'лошадь',\n      image: 'img/horse.jpg',\n      audioSrc: 'audio/horse.mp3'\n    },\n    {\n      word: 'pig',\n      translation: 'свинья',\n      image: 'img/pig.jpg',\n      audioSrc: 'audio/pig.mp3'\n    },\n    {\n      word: 'rabbit',\n      translation: 'кролик',\n      image: 'img/rabbit.jpg',\n      audioSrc: 'audio/rabbit.mp3'\n    },\n    {\n      word: 'sheep',\n      translation: 'овца',\n      image: 'img/sheep.jpg',\n      audioSrc: 'audio/sheep.mp3'\n    }\n  ],\n  [\n    {\n      word: 'bird',\n      translation: 'птица',\n      image: 'img/bird.jpg',\n      audioSrc: 'audio/bird.mp3'\n    },\n    {\n      word: 'fish',\n      translation: 'рыба',\n      image: 'img/fish1.jpg',\n      audioSrc: 'audio/fish.mp3'\n    },\n    {\n      word: 'frog',\n      translation: 'жаба',\n      image: 'img/frog.jpg',\n      audioSrc: 'audio/frog.mp3'\n    },\n    {\n      word: 'giraffe',\n      translation: 'жирафа',\n      image: 'img/giraffe.jpg',\n      audioSrc: 'audio/giraffe.mp3'\n    },\n    {\n      word: 'lion',\n      translation: 'лев',\n      image: 'img/lion.jpg',\n      audioSrc: 'audio/lion.mp3'\n    },\n    {\n      word: 'mouse',\n      translation: 'мышь',\n      image: 'img/mouse.jpg',\n      audioSrc: 'audio/mouse.mp3'\n    },\n    {\n      word: 'turtle',\n      translation: 'черепаха',\n      image: 'img/turtle.jpg',\n      audioSrc: 'audio/turtle.mp3'\n    },\n    {\n      word: 'dolphin',\n      translation: 'дельфин',\n      image: 'img/dolphin.jpg',\n      audioSrc: 'audio/dolphin.mp3'\n    }\n  ],\n  [\n    {\n      word: 'skirt',\n      translation: 'юбка',\n      image: 'img/skirt.jpg',\n      audioSrc: 'audio/skirt.mp3'\n    },\n    {\n      word: 'pants',\n      translation: 'брюки',\n      image: 'img/pants.jpg',\n      audioSrc: 'audio/pants.mp3'\n    },\n    {\n      word: 'blouse',\n      translation: 'блузка',\n      image: 'img/blouse.jpg',\n      audioSrc: 'audio/blouse.mp3'\n    },\n    {\n      word: 'dress',\n      translation: 'платье',\n      image: 'img/dress.jpg',\n      audioSrc: 'audio/dress.mp3'\n    },\n    {\n      word: 'boot',\n      translation: 'ботинок',\n      image: 'img/boot.jpg',\n      audioSrc: 'audio/boot.mp3'\n    },\n    {\n      word: 'shirt',\n      translation: 'рубашка',\n      image: 'img/shirt.jpg',\n      audioSrc: 'audio/shirt.mp3'\n    },\n    {\n      word: 'coat',\n      translation: 'пальто',\n      image: 'img/coat.jpg',\n      audioSrc: 'audio/coat.mp3'\n    },\n    {\n      word: 'shoe',\n      translation: 'туфли',\n      image: 'img/shoe.jpg',\n      audioSrc: 'audio/shoe.mp3'\n    }\n  ],\n  [\n    {\n      word: 'sad',\n      translation: 'грустный',\n      image: 'img/sad.jpg',\n      audioSrc: 'audio/sad.mp3'\n    },\n    {\n      word: 'angry',\n      translation: 'сердитый',\n      image: 'img/angry.jpg',\n      audioSrc: 'audio/angry.mp3'\n    },\n    {\n      word: 'happy',\n      translation: 'счастливый',\n      image: 'img/happy.jpg',\n      audioSrc: 'audio/happy.mp3'\n    },\n    {\n      word: 'tired',\n      translation: 'уставший',\n      image: 'img/tired.jpg',\n      audioSrc: 'audio/tired.mp3'\n    },\n    {\n      word: 'surprised',\n      translation: 'удивлённый',\n      image: 'img/surprised.jpg',\n      audioSrc: 'audio/surprised.mp3'\n    },\n    {\n      word: 'scared',\n      translation: 'испуганный',\n      image: 'img/scared.jpg',\n      audioSrc: 'audio/scared.mp3'\n    },\n    {\n      word: 'smile',\n      translation: 'улыбка',\n      image: 'img/smile.jpg',\n      audioSrc: 'audio/smile.mp3'\n    },\n    {\n      word: 'laugh',\n      translation: 'смех',\n      image: 'img/laugh.jpg',\n      audioSrc: 'audio/laugh.mp3'\n    }\n  ],\n  [\n    {\n      word: 'spider',\n      translation: 'паук',\n      image: 'img/spider.jpg',\n      audioSrc: 'audio/spider.mp3'\n    },\n    {\n      word: 'wasp',\n      translation: 'оса',\n      image: 'img/wasp.jpg',\n      audioSrc: 'audio/wasp.mp3'\n    },\n    {\n      word: 'butterfly',\n      translation: 'бабочка',\n      image: 'img/butterfly.jpg',\n      audioSrc: 'audio/butterfly.mp3'\n    },\n    {\n      word: 'beetle',\n      translation: 'жук',\n      image: 'img/beetle.jpg',\n      audioSrc: 'audio/beetle.mp3'\n    },\n    {\n      word: 'caterpillar',\n      translation: 'гусеница',\n      image: 'img/caterpillar.jpg',\n      audioSrc: 'audio/caterpillar.mp3'\n    },\n    {\n      word: 'ladybird',\n      translation: 'божья коровка',\n      image: 'img/ladybird.jpg',\n      audioSrc: 'audio/ladybird.mp3'\n    },\n    {\n      word: 'ant',\n      translation: 'муравей',\n      image: 'img/ant.jpg',\n      audioSrc: 'audio/ant.mp3'\n    },\n    {\n      word: 'bee',\n      translation: 'пчела',\n      image: 'img/bee.jpg',\n      audioSrc: 'audio/bee.mp3'\n    }\n  ],\n  [\n    {\n      word: 'spoon',\n      translation: 'ложка',\n      image: 'img/spoon.jpg',\n      audioSrc: 'audio/spoon.mp3'\n    },\n    {\n      word: 'fork',\n      translation: 'вилка',\n      image: 'img/fork.jpg',\n      audioSrc: 'audio/fork.mp3'\n    },\n    {\n      word: 'knife',\n      translation: 'нож',\n      image: 'img/knife.jpg',\n      audioSrc: 'audio/knife.mp3'\n    },\n    {\n      word: 'plate',\n      translation: 'тарелка',\n      image: 'img/plate.jpg',\n      audioSrc: 'audio/plate.mp3'\n    },\n    {\n      word: 'glass',\n      translation: 'стакан',\n      image: 'img/glass.jpg',\n      audioSrc: 'audio/glass.mp3'\n    },\n    {\n      word: 'kettle',\n      translation: 'чайник',\n      image: 'img/kettle.jpg',\n      audioSrc: 'audio/kettle.mp3'\n    },\n    {\n      word: 'saltcellar',\n      translation: 'солонка',\n      image: 'img/saltcellar.jpg',\n      audioSrc: 'audio/saltcellar.mp3'\n    },\n    {\n      word: 'cup',\n      translation: 'чашка',\n      image: 'img/cup.jpg',\n      audioSrc: 'audio/cup.mp3'\n    }\n  ]\n]\n","import React from \"react\";\r\nimport { cardCategories } from \"../../../assets/cards\";\r\n\r\nimport './menu.scss';\r\n\r\ninterface MyProps {\r\n  isShow: boolean,\r\n  changeCategory: (page: string) => void\r\n}\r\n\r\ninterface MyState {\r\n  activePage: string\r\n}\r\n\r\nexport default class MenuItems extends React.Component<MyProps, MyState> {\r\n\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n\r\n  //   this.wrapperRef = React.createRef();\r\n  //   this.setWrapperRef = this.setWrapperRef.bind(this);\r\n  //   this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  // }\r\n\r\n  state = { activePage: 'MainPage' }\r\n  toggleClass(nameCategory: string) {\r\n    this.props.changeCategory(nameCategory);\r\n    this.setState({ activePage: nameCategory });\r\n  };\r\n\r\n  // handleClickOutside(event) {\r\n  //   if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n  //     alert('You clicked outside of me!');\r\n  //   }\r\n  // }\r\n  // componentDidMount() {\r\n  //   document.addEventListener('mousedown', this.handleClickOutside);\r\n  // }\r\n  // componentWillUnmount() {\r\n  //   document.removeEventListener('mousedown', this.handleClickOutside);\r\n  // }\r\n\r\n  render() {\r\n    let menuItems = [{ nameCategory: 'MainPage', image: 'img/home.jpg' },\r\n    ...cardCategories, { nameCategory: 'Stats', image: 'img/stats.jpg' }];\r\n\r\n    return (\r\n      <ul className={`menu ${this.props.isShow ? 'menu__translate' : ''}`}\r\n        //ref={this.wrapperRef}\r\n      >\r\n        {menuItems\r\n          .map((item) =>\r\n            <li key={item.nameCategory}\r\n              className={`menu__link ${item.nameCategory === this.state.activePage ? 'active' : ''}`}\r\n              onClick=\r\n              {() =>\r\n                this.toggleClass(item.nameCategory)\r\n              }>\r\n              <img className='menu__icon' src={item.image} />\r\n              {item.nameCategory}\r\n            </li>)}\r\n      </ul>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport BurgerMenu from \"./Menu/burger-menu\";\r\nimport Switcher from \"./Switch/switcher\";\r\nimport MenuItems from \"./Menu/menu-itams\";\r\n\r\nimport './header.scss';\r\n\r\ninterface MyProps {\r\n  changeCategory: (page: string)=>void,\r\n  changeGameModeApp: (gameMode: string)=>void,\r\n  gameModeName: string\r\n}\r\ninterface MyState {\r\n  isShow: boolean\r\n}\r\n\r\nexport default class Header extends React.Component<MyProps, MyState> {\r\n  constructor(props: MyProps){\r\n    super(props);\r\n    this.state = {\r\n      isShow: false\r\n    }\r\n  }\r\n  openCloseMenu() {\r\n    if (this.state.isShow){\r\n      this.setState({isShow: false})\r\n    } else {\r\n      this.setState({isShow: true})\r\n    }\r\n  }\r\n  menuItemsHandler(page: string){\r\n    this.props.changeCategory(page);\r\n    this.openCloseMenu();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <section className='header-field'>\r\n        <div>\r\n          <BurgerMenu clickHandler={()=>this.openCloseMenu()} isShow={this.state.isShow} />\r\n          <MenuItems isShow={this.state.isShow}\r\n            changeCategory={(page:string)=>{this.menuItemsHandler(page)}}\r\n          />\r\n        </div>\r\n        <h1>English for kids</h1>\r\n        <Switcher changeGameModeApp={(gameMode:string)=>{ this.props.changeGameModeApp(gameMode);}} gameModeName={this.props.gameModeName}/>\r\n      </section>\r\n    )\r\n  }\r\n}","\r\nimport React from 'react';\r\n\r\ninterface MyProps {\r\n  title: string,\r\n  imgSrc: string,\r\n  changeCategory: (page: string) => void,\r\n  translation?: string,\r\n  audioSrc?: string,\r\n  activeGameMode?: string,\r\n  compaireCurrentSound: (sound: string) => boolean,\r\n  nameButtonGame: string\r\n}\r\ninterface MyState {\r\n  playMode: boolean,\r\n  isFlipped: boolean,\r\n  disabled: boolean\r\n}\r\n\r\nexport default class Card extends React.Component<MyProps, MyState> {\r\n\r\n  state = {\r\n    playMode: false,\r\n    isFlipped: false,\r\n    disabled: false\r\n  }\r\n\r\n  clickCard(title: string) {\r\n\r\n    if (this.props.audioSrc) {\r\n      if (this.props.activeGameMode === 'play' && this.props.nameButtonGame === 'Repeat Word') {\r\n        if (this.props.compaireCurrentSound(this.props.audioSrc)) {\r\n          this.setState({ disabled: true })\r\n        }\r\n      } else if (this.props.activeGameMode === 'train') {\r\n        this.playAudio(this.props.audioSrc)\r\n      }\r\n    } else {\r\n      this.props.changeCategory(title);\r\n    }\r\n  }\r\n\r\n  playAudio(audioSrc: string) {\r\n    const audio = new Audio();\r\n    audio.src = audioSrc;\r\n    audio.currentTime = 0;\r\n    audio.play();\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let flippedButton = <div></div>\r\n    let languageTittle = this.props.title\r\n    let displayNone = '';\r\n    let cardModePlay = '';\r\n\r\n\r\n    if (this.props.audioSrc) {\r\n      flippedButton = <img className={`flipped-button ${this.state.isFlipped || this.props.activeGameMode === 'play' ? 'display-none' : ''}`}\r\n        onClick={() => {\r\n          this.setState({ isFlipped: true })\r\n        }}\r\n        src='./img/rotate.svg' />\r\n    }\r\n\r\n    if (this.state.isFlipped && this.props.translation) {\r\n      languageTittle = this.props.translation\r\n    }\r\n\r\n    if (this.props.activeGameMode === 'play' && this.props.translation) {\r\n      cardModePlay = 'card__image__play'\r\n      displayNone = 'display-none';\r\n    } else {\r\n      displayNone = '';\r\n      cardModePlay = '';\r\n    }\r\n\r\n    return (\r\n      <div className=\r\n        {`card-container ${this.state.isFlipped ? 'flipped' : ''} \r\n        ${this.state.disabled ? 'card__disable' : ''}`}\r\n\r\n        onMouseLeave={(() => {\r\n          if (this.state.isFlipped === true) {\r\n            this.setState({ isFlipped: false })\r\n          }\r\n        })}\r\n        onClick={() => this.clickCard(this.props.title)}>\r\n        <div className=\"card\">\r\n          <img className={`${cardModePlay} card__image ${this.state.isFlipped ? 'card__image__flipped' : ''}`}\r\n            src={this.props.imgSrc} />\r\n          <hr className={`${displayNone} card__${this.props.activeGameMode === 'train' ? 'hr-train' : 'hr-play'}`} />\r\n          <p className={`${displayNone} card__name ${this.state.isFlipped ? 'scale' : ''}`}>{languageTittle}</p>\r\n          {flippedButton}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}","import React from 'react';\r\nimport Card from './Card';\r\n\r\nimport './cardGrid.scss'\r\n\r\ninterface Categories {\r\n  title: string,\r\n  imgSrc: string,\r\n  translation?: string,\r\n  audioSrc?: string,\r\n  arrSoudsCategory?: string[]\r\n}\r\ninterface MyState {\r\n  nameButtonGame: string,\r\n  currentSound: number\r\n\r\n  startGameActivePage: string,\r\n  startGameactiveGameMode: string,\r\n  isGameOver: boolean,\r\n  opensCard: number\r\n}\r\ninterface MyProps {\r\n  itemsCategories: Categories[],\r\n  changeCategory: (page: string) => void,\r\n  activeGameMode: string,\r\n  activePage: string,\r\n  arrSoudsCategory?: string[],\r\n  countMistakes?: (mistakes: number) => void\r\n}\r\n\r\n\r\nexport default class CardGrid extends React.Component<MyProps, MyState> {\r\n\r\n  state = {\r\n    nameButtonGame: 'Start Game',\r\n    startGameActivePage: '',\r\n    startGameactiveGameMode: '',\r\n    currentSound: 0,\r\n    isGameOver: false,\r\n    opensCard: 0\r\n  }\r\n  static getDerivedStateFromProps(nextProps: MyProps, prevState: MyState) { //до рпендара\r\n    if (nextProps.activeGameMode !== prevState.startGameactiveGameMode ||\r\n      nextProps.activePage !== prevState.startGameActivePage) {\r\n      return { ...prevState, nameButtonGame: 'Start Game', opensCard: 0 }\r\n    }\r\n    return {\r\n      ...prevState\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps: MyProps, prevState: MyState) { //после рендера\r\n    if (this.state.currentSound !== prevState.currentSound ) { //!!!!!!!!!!this.props.arrSoudsCategory && && this.state.currentSound <= this.props.arrSoudsCategory.length\r\n      this.playCurrentSound()\r\n    }\r\n  }\r\n\r\n  playAudio(audioSrc: string) {\r\n    const audio = new Audio();\r\n    audio.src = audioSrc;\r\n    audio.currentTime = 0;\r\n    audio.play();\r\n  }\r\n\r\n  // stopGame(activeGameMode: string, activePage: string) {\r\n  //   if (this.state.startGameactiveGameMode !== activeGameMode || this.state.startGameActivePage !== activePage) {\r\n  //     this.setState({ nameButtonGame: 'Start Game' })\r\n  //   }\r\n  // }\r\n\r\n  compaireCurrentSound = (sound: string): boolean => {\r\n\r\n    // this.setState({opensCard: this.state.opensCard + 1})\r\n    // console.log(1, this.state.opensCard);\r\n\r\n    if (this.props.arrSoudsCategory &&\r\n      this.props.arrSoudsCategory[this.state.currentSound] === sound) {\r\n      this.playAudio('audio/correct.mp3');\r\n      this.setState({ currentSound: this.state.currentSound + 1 });\r\n      // this.setState({ opensCard: this.state.opensCard + 1 })\r\n\r\n      return true\r\n    } else {\r\n      this.playAudio('audio/error.mp3')\r\n      this.setState({ opensCard: this.state.opensCard + 1 })\r\n      return false\r\n    }\r\n  }\r\n\r\n\r\n  playCurrentSound() {\r\n    if (this.props.arrSoudsCategory)\r\n\r\n      if (this.state.currentSound > this.props.arrSoudsCategory.length - 1) {\r\n        if (this.props.countMistakes)\r\n          this.props.countMistakes(this.state.opensCard)\r\n        this.setState(\r\n          {\r\n            nameButtonGame: 'Start Game',\r\n            currentSound: 0,\r\n            isGameOver: true\r\n          }\r\n        )\r\n\r\n      } else {\r\n        this.playAudio(this.props.arrSoudsCategory[this.state.currentSound])\r\n      }\r\n\r\n  }\r\n\r\n  startGame(activeGameMode: string, activePage: string) {\r\n    this.playCurrentSound()\r\n    this.setState(\r\n      {\r\n        nameButtonGame: 'Repeat Word',\r\n        startGameactiveGameMode: activeGameMode,\r\n        startGameActivePage: activePage\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.isGameOver === true) {\r\n      console.log('go main');\r\n      this.setState({ isGameOver: false });\r\n      this.props.changeCategory('GameOver')\r\n\r\n    }\r\n    return (\r\n      <section className='main'>\r\n        <div className=\"cards-field\">\r\n          {this.props.itemsCategories.map((item) => {\r\n            return (\r\n              <Card\r\n                key={item.title}\r\n                activeGameMode={this.props.activeGameMode}\r\n                title={item.title}\r\n                imgSrc={item.imgSrc}\r\n                translation={item.translation}\r\n                audioSrc={item.audioSrc}\r\n                changeCategory={(page: string) => {\r\n                  this.props.changeCategory(page)\r\n                }}\r\n                compaireCurrentSound={this.compaireCurrentSound}\r\n                nameButtonGame={this.state.nameButtonGame}\r\n              />)\r\n          })}\r\n        </div>\r\n        <button\r\n          className=\r\n          {\r\n            `button__game${this.props.activeGameMode === 'train' ||\r\n              this.props.activePage === 'MainPage' ? '__none' : ''}`\r\n          }\r\n\r\n          onClick={() => {\r\n            this.startGame(this.props.activeGameMode, this.props.activePage)\r\n          }}\r\n        >\r\n\r\n          {this.state.nameButtonGame}\r\n        </button>\r\n      </section>\r\n\r\n\r\n    )\r\n  }\r\n}","import React from \"react\";\r\n\r\nimport './footer.scss';\r\n\r\nexport default class Footer extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n      <section className='footer-container'>\r\n        <a className=\"github\" href=\"https://github.com/zhenuua\" target=\"_blank\" rel=\"noopener noreferrer\">github</a>\r\n        <a className=\"rss\" href=\"https://rs.school/js/\" target=\"_blank\" rel=\"noopener\">\r\n        <span className=\"rss-year\">'21</span>\r\n        </a>\r\n      </section>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { cardCategories, cards } from '../../assets/cards'\r\n\r\nimport './stats.scss';\r\n\r\ninterface MyState {\r\n}\r\ninterface MyProps {\r\n}\r\n//TODO\r\nexport default class Stats extends React.Component<MyProps, MyState> {\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let stringTable: {\r\n      nameCat: string,\r\n      word: string,\r\n      translation: string,\r\n      DEFAULT: number\r\n    };\r\n\r\n    //let stringTable: JSX.Element;\r\n\r\n    let allStringTable = [];\r\n    let DEFAULT_NUMBER_STATS = 0;\r\n    let indexInCategory = 0;\r\n\r\n    for (let findNameCategory of cardCategories) {\r\n      // console.log(1, findNameCategory.nameCategory);\r\n      indexInCategory = cardCategories\r\n        .findIndex((element) => {\r\n          if (findNameCategory.nameCategory === element.nameCategory) {\r\n            return true\r\n          }\r\n        })\r\n      // console.log(2, indexInCategory);\r\n\r\n      const lendsCards = cards.length;\r\n      for (let i = 0; i < lendsCards; i++) {\r\n\r\n        // console.log(cards[i]);\r\n\r\n        stringTable = {\r\n          nameCat: findNameCategory.nameCategory,\r\n          word: cards[indexInCategory][i].word,\r\n          translation: cards[indexInCategory][i].translation,\r\n          DEFAULT: DEFAULT_NUMBER_STATS\r\n        }\r\n        allStringTable.push(stringTable);\r\n        // <tr className='table__string'>\r\n        //   <th>${findNameCategory.nameCategory}</th>\r\n        //   <th>${cards[indexInCategory][i].word}</th>\r\n        //   <th>${cards[indexInCategory][i].translation}</th>\r\n        //   <th>${DEFAULT_NUMBER_STATS}</th>\r\n        //   <th>${DEFAULT_NUMBER_STATS}</th>\r\n        //   <th>${DEFAULT_NUMBER_STATS}</th>\r\n        //   <th>${DEFAULT_NUMBER_STATS}</th>\r\n        // </tr>\r\n        //allStringTable += stringTable\r\n        // let aaaaa = allStringTable.replace(/^'(.+(?=\"$))'$/, '$1')\r\n        //console.log(allStringTable);\r\n\r\n        //  const html = '<div>Example HTML string</div>';\r\n        //  return <div>{ ReactHtmlParser(html) }</div>;\r\n\r\n        // React.renderToString(<div>p</div>);\r\n        //allStringTable += stringTable\r\n        //console.log(allStringTable);\r\n\r\n\r\n      }\r\n      //console.log(nameCategory.nameCategory);\r\n\r\n    }\r\n\r\n    return (\r\n      <section className='stats'>\r\n        <div className='stats__control'>\r\n          <button className='stats__control__button'>Repeat difficult words</button>\r\n          <button className='stats__control__button'>Reset</button>\r\n        </div>\r\n        <table className='table__stats'>\r\n          <tr className='table__title'>\r\n            <th>Category</th>\r\n            <th>Word</th>\r\n            <th>Translation</th>\r\n            <th>Trained</th>\r\n            <th>Correct</th>\r\n            <th>InCorrect</th>\r\n            <th>%</th>\r\n          </tr>\r\n\r\n          {allStringTable.map((item) => {\r\n            return (\r\n              <tr className='table__string' key={item.nameCat}>\r\n                <th>{item.nameCat}</th>\r\n                <th>{item.word}</th>\r\n                <th>{item.translation}</th>\r\n                <th>{DEFAULT_NUMBER_STATS}</th>\r\n                <th>{DEFAULT_NUMBER_STATS}</th>\r\n                <th>{DEFAULT_NUMBER_STATS}</th>\r\n                <th>{DEFAULT_NUMBER_STATS}</th>\r\n              </tr>\r\n            )\r\n\r\n          })}\r\n        </table>\r\n      </section>\r\n    )\r\n  }\r\n  // nameCat: findNameCategory.nameCategory,\r\n  // word: cards[indexInCategory][i].word,\r\n  // translation: cards[indexInCategory][i].translation,\r\n  // DEFAULT: DEFAULT_NUMBER_STATS\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport './GameOver.scss';\r\n\r\ninterface MyState {\r\n}\r\ninterface MyProps {\r\n  changeCategory: (page: string) => void,\r\n  mistakes: number\r\n}\r\n\r\nexport default class GameOver extends React.Component<MyProps, MyState> {\r\n  \r\n  playAudio(audioSrc: string) {\r\n    const audio = new Audio();\r\n    audio.src = audioSrc;\r\n    audio.currentTime = 0;\r\n    audio.play();\r\n  }\r\n\r\n  render(){\r\n    const winnerMassage = 'You win!';\r\n    const failMassage = 'You fail!';\r\n    const imageWinSrc = './img/success.jpg';\r\n    const imageFailSrc = './img/failure.jpg';\r\n    const audioWinSrc = 'audio/success.mp3';\r\n    const audioFailSrc = 'audio/failure.mp3';\r\n    let massage = '';\r\n    let imageGameOver = '';\r\n    let soundGameOver = '';\r\n    if (this.props.mistakes === 0){\r\n      massage = winnerMassage;\r\n      imageGameOver = imageWinSrc;\r\n      soundGameOver = audioWinSrc;\r\n    } else {\r\n      massage = failMassage;\r\n      imageGameOver = imageFailSrc;\r\n      soundGameOver = audioFailSrc;\r\n    }\r\n\r\n    this.playAudio(soundGameOver);\r\n\r\n    let goMainPage: ReturnType<typeof setTimeout>;\r\n    goMainPage = setTimeout(()=>{\r\n      this.props.changeCategory('MainPage');\r\n    }, 4000);\r\n\r\n    return (\r\n      <section className='game-over__field'>\r\n        <h1 className='game-over__text'>{massage}</h1>\r\n        <h2 className={`${this.props.mistakes === 0 ? 'display-none' : 'game-over__text'}`}>\r\n          You have: {this.props.mistakes} errors!\r\n        </h2>\r\n        <img className='game-over__image' src={imageGameOver} />\r\n      </section>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Header from './components/Header/header';\r\nimport CardGrid from './components/MainPage/CardGrid';\r\nimport Footer from './components/Footer/footer';\r\nimport Stats from './components/Stats/stats';\r\nimport GameOver from './components/GameOver/GameOver'\r\nimport { cardCategories, cards } from './assets/cards';\r\n\r\nimport './styles.scss'\r\n\r\ninterface MyProps {\r\n}\r\ninterface MyState {\r\n  activePage: string,\r\n  activeGameMode: string,\r\n  mistakes: number\r\n}\r\n\r\nconst TRAIN_GAME_MODE = \"train\";\r\nconst PLAY_GAME_MODE = \"play\";\r\nconst DEFAULT_PAGE = \"MainPage\";\r\nconst PAGE_STATS = 'Stats';\r\n\r\n\r\nexport default class App extends React.Component<MyProps, MyState> {\r\n\r\n\r\n  state = { activePage: DEFAULT_PAGE, activeGameMode: TRAIN_GAME_MODE, mistakes: 0 }\r\n\r\n  getItems() {\r\n    return cardCategories.map((item) => {\r\n      return {\r\n        title: item.nameCategory,\r\n        imgSrc: item.image\r\n      }\r\n    })\r\n  }\r\n  getCards(indexCategory: number) {\r\n    //cards[indexCategory].sort(() => Math.random() - 0.5);\r\n\r\n\r\n    return cards[indexCategory].map((item) => {\r\n      return {\r\n        title: item.word,\r\n        imgSrc: item.image,\r\n        translation: item.translation,\r\n        audioSrc: item.audioSrc\r\n      }\r\n    })\r\n  }\r\n\r\n  getSoudsCategory(indexCategory: number) {\r\n    let arrSoudsCategory: string[] = []\r\n    for (let i = 0; i < cards[indexCategory].length; i++) {\r\n      arrSoudsCategory.push(cards[indexCategory][i].audioSrc)\r\n    }\r\n    return arrSoudsCategory.sort(() => Math.random() - 0.5);\r\n  }\r\n  changeCategory(category: string) {\r\n    this.setState({ activePage: category })\r\n  }\r\n  changeGameModeApp(gameMode: string) {\r\n    this.setState({ activeGameMode: gameMode })\r\n  }\r\n  countMistakes(mistakes: number){\r\n    console.log('APP', mistakes);\r\n    this.setState({mistakes: mistakes})\r\n  }\r\n\r\n\r\n  render() {\r\n    let indexCategory = cardCategories\r\n      .findIndex((element) => {\r\n        if (this.state.activePage === element.nameCategory) {\r\n          return true\r\n        }\r\n      })\r\n\r\n    let mainSection =\r\n      <CardGrid\r\n        itemsCategories={this.getItems()}\r\n        changeCategory={(category: string) => { this.changeCategory(category) }}\r\n\r\n        activeGameMode={this.state.activeGameMode} //может убрать\r\n        activePage={this.state.activePage} //может убрать\r\n      />\r\n\r\n    if (this.state.activePage === DEFAULT_PAGE) {\r\n      mainSection =\r\n        <CardGrid\r\n          itemsCategories={this.getItems()}\r\n          changeCategory={(category: string) => { this.changeCategory(category) }}\r\n\r\n\r\n          activeGameMode={this.state.activeGameMode}//может убрать\r\n          activePage={this.state.activePage}//может убрать\r\n        />\r\n\r\n    } else if (this.state.activePage === PAGE_STATS) {\r\n      mainSection = <Stats />\r\n    } else if (this.state.activePage === 'GameOver') {\r\n      mainSection = \r\n      <GameOver \r\n        changeCategory={(category: string) => { this.changeCategory(category) }}\r\n        mistakes = {this.state.mistakes}\r\n      />\r\n    } else if (this.state.activePage === cardCategories[indexCategory].nameCategory) {\r\n      mainSection =\r\n        <CardGrid\r\n          itemsCategories={this.getCards(indexCategory)}\r\n          changeCategory={(category: string) => { this.changeCategory(category) }}\r\n          activeGameMode={this.state.activeGameMode}\r\n          arrSoudsCategory={this.getSoudsCategory(indexCategory)}\r\n          activePage={this.state.activePage}\r\n          countMistakes={(mistakes: number)=>{this.countMistakes(mistakes)}}\r\n        />\r\n    }\r\n\r\n\r\n    return (\r\n      <div className='wrapper'>\r\n        <Header\r\n          changeCategory={(category: string) => { this.changeCategory(category) }}\r\n          changeGameModeApp={(gameMode: string) => { this.changeGameModeApp(gameMode) }}\r\n          gameModeName={this.state.activeGameMode}\r\n        />\r\n        {mainSection}\r\n        <Footer />\r\n      </div>\r\n\r\n    )\r\n  }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\n\nconst history = createBrowserHistory()\n\nReactDOM.render(\n\n // <React.StrictMode>\n <Router history={history}>\n  <App />\n </Router>,\n//  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nreportWebVitals();\n"],"sourceRoot":""}