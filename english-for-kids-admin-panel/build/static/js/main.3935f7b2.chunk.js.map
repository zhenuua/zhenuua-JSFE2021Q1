{"version":3,"sources":["assets/constants.tsx","components/Header/Menu/burger-menu.tsx","components/Header/Switch/switcher.tsx","assets/cards.tsx","components/Header/Menu/menu-itams.tsx","components/Header/header.tsx","components/MainPage/Card.tsx","components/MainPage/CardGrid.tsx","components/Footer/footer.tsx","components/Stats/stats.tsx","components/GameOver/GameOver.tsx","components/AdminPage/header-admin.tsx","components/AdminPage/card-category/cardCategory.tsx","components/AdminPage/card-category/categories.tsx","components/AdminPage/App-admin.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Views","BurgerMenu","className","onClick","props","clickHandler","this","isShow","React","Component","ButtonsNames","linkIcon","ROTATE","HOME","STATS","SUCCESS","FAILURE","linkAudio","Switcher","gameModeName","TRAIN_MODE","changeGameModeApp","PLAY_MODE","type","onChange","changeGameMode","cardCategories","nameCategory","image","cards","word","translation","audioSrc","MenuItems","state","activePage","MAIN","isShowPopup","isCorrectPassword","login","changeCategory","setState","event","console","log","target","openClosePopup","menuItems","map","item","toggleClass","src","required","placeholder","value","loginInput","cancel","Header","page","openCloseMenu","menuItemsHandler","gameMode","Card","playMode","isFlipped","disabled","title","activeGameMode","nameButtonGame","compaireCurrentSound","playAudio","audio","Audio","currentTime","play","flippedButton","languageTittle","displayNone","cardModePlay","onMouseLeave","clickCard","imgSrc","CardGrid","startGameActivePage","startGameactiveGameMode","currentSound","isGameOver","errorsClick","sound","arrSoudsCategory","prevProps","prevState","playCurrentSound","length","countMistakes","GAMEOVER","itemsCategories","startGame","nextProps","Footer","href","rel","Stats","stringTable","allStringTable","indexInCategory","findNameCategory","findIndex","element","lendsCards","i","nameCat","DEFAULT","push","GameOver","massage","imageSrcGameOver","soundSrcGameOver","mistakes","setTimeout","AdminHeader","goCategories","goWords","exitAdmin","CardCategoryAdmin","closeCard","updateCategory","addWord","Categories","createCategory","AdminMain","category","App","indexCategory","sort","Math","random","header","mainSection","getItems","footer","ADMIN","getCards","getSoudsCategory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","history","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3935f7b2.chunk.js","sourcesContent":["export enum Views {\r\n  TRAIN_MODE = 'train',\r\n  PLAY_MODE = 'play',\r\n  MAIN = 'MainPage',\r\n  STATS = 'Stats',\r\n  GAMEOVER = 'GameOver',\r\n  ADMIN = 'Admin'\r\n}\r\n\r\nexport const ButtonsNames = {\r\n  START_GAME: 'Start Game',\r\n  STOP_GAME: 'Stop Game',\r\n  REPEAT_WORD: 'Repeat Word'\r\n};\r\n\r\nexport const linkIcon = {\r\n  ROTATE: './img/rotate.svg',\r\n  HOME: 'img/home.jpg',\r\n  STATS: 'img/stats.jpg',\r\n  SUCCESS: './img/success.jpg',\r\n  FAILURE: './img/failure.jpg',\r\n}\r\n\r\nexport const linkAudio = {\r\n  WIN: 'audio/success.mp3',\r\n  FAIL: 'audio/failure.mp3',\r\n  ERROR: 'audio/error.mp3',\r\n  CORRECT: 'audio/correct.mp3'\r\n}\r\n\r\nexport const Massages = {\r\n  WINNER: 'You win!',\r\n  FAIL:'You fail!'\r\n}","import React from \"react\";\r\n\r\nimport './menu.scss';\r\n\r\ninterface MyProps {\r\n  isShow: boolean,\r\n  clickHandler: () => void\r\n}\r\ninterface MyState {\r\n\r\n}\r\n\r\nexport default class BurgerMenu extends React.Component<MyProps, MyState> {\r\n\r\n  render(){\r\n    return (\r\n      <div className='burger' onClick={()=>this.props.clickHandler()}>  \r\n        <span className={`burger__line ${this.props.isShow ? 'burger__line__active' : ''}`} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { Views } from '../../../assets/constants';\r\n\r\nimport './switcher.scss';\r\n\r\ninterface MyProps {\r\n  changeGameModeApp: (gameMode: string) => void,\r\n  gameModeName: string\r\n}\r\ninterface MyState {\r\n}\r\n\r\nexport default class Switcher extends React.Component<MyProps, MyState> {\r\n\r\n  changeGameMode() {\r\n    if (this.props.gameModeName === Views.TRAIN_MODE) {\r\n      this.props.changeGameModeApp(Views.PLAY_MODE);\r\n    } else {\r\n      this.props.changeGameModeApp(Views.TRAIN_MODE);\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <label className=\"switch\">\r\n        <input type=\"checkbox\" onChange={() => this.changeGameMode()} />\r\n        <span className=\"slider round train\">\r\n          <p className='game-mode'>{this.props.gameModeName}</p>\r\n        </span>\r\n      </label>\r\n    )\r\n  }\r\n}","export let cardCategories = [\n  {\n    nameCategory: 'Action (set A)',\n    image: 'img/dance.jpg'\n  },\n  {\n    nameCategory: 'Action (set B)',\n    image: 'img/open.jpg'\n  },\n  {\n    nameCategory: 'Animal (set A)',\n    image: 'img/cat.jpg'\n  },\n  {\n    nameCategory: 'Animal (set B)',\n    image: 'img/bird.jpg'\n  },\n  {\n    nameCategory: 'Clothes',\n    image: 'img/skirt.jpg'\n  },\n  {\n    nameCategory: 'Emotions',\n    image: 'img/happy.jpg'\n  },\n  {\n    nameCategory: 'Insects',\n    image: 'img/butterfly.jpg'\n  },\n  {\n    nameCategory: 'Сutlery',\n    image: 'img/cup.jpg'\n  }\n];\n\nexport const cards = [ \n  [\n    {\n      word: 'cry',\n      translation: 'плакать',\n      image: 'img/cry.jpg',\n      audioSrc: 'audio/cry.mp3'\n    },\n    {\n      word: 'dance',\n      translation: 'танцевать',\n      image: 'img/dance.jpg',\n      audioSrc: 'audio/dance.mp3'\n    },\n    {\n      word: 'dive',\n      translation: 'нырять',\n      image: 'img/dive.jpg',\n      audioSrc: 'audio/dive.mp3'\n    },\n    {\n      word: 'draw',\n      translation: 'рисовать',\n      image: 'img/draw.jpg',\n      audioSrc: 'audio/draw.mp3'\n    },\n    {\n      word: 'fish',\n      translation: 'ловить рыбу',\n      image: 'img/fish.jpg',\n      audioSrc: 'audio/fish.mp3'\n    },\n    {\n      word: 'fly',\n      translation: 'летать',\n      image: 'img/fly.jpg',\n      audioSrc: 'audio/fly.mp3'\n    },\n    {\n      word: 'hug',\n      translation: 'обнимать',\n      image: 'img/hug.jpg',\n      audioSrc: 'audio/hug.mp3'\n    },\n    {\n      word: 'jump',\n      translation: 'прыгать',\n      image: 'img/jump.jpg',\n      audioSrc: 'audio/jump.mp3'\n    }\n  ],\n  [\n    {\n      word: 'open',\n      translation: 'открывать',\n      image: 'img/open.jpg',\n      audioSrc: 'audio/open.mp3'\n    },\n    {\n      word: 'play',\n      translation: 'играть',\n      image: 'img/play.jpg',\n      audioSrc: 'audio/play.mp3'\n    },\n    {\n      word: 'point',\n      translation: 'указывать',\n      image: 'img/point.jpg',\n      audioSrc: 'audio/point.mp3'\n    },\n    {\n      word: 'ride',\n      translation: 'ездить',\n      image: 'img/ride.jpg',\n      audioSrc: 'audio/ride.mp3'\n    },\n    {\n      word: 'run',\n      translation: 'бегать',\n      image: 'img/run.jpg',\n      audioSrc: 'audio/run.mp3'\n    },\n    {\n      word: 'sing',\n      translation: 'петь',\n      image: 'img/sing.jpg',\n      audioSrc: 'audio/sing.mp3'\n    },\n    {\n      word: 'skip',\n      translation: 'пропускать, прыгать',\n      image: 'img/skip.jpg',\n      audioSrc: 'audio/skip.mp3'\n    },\n    {\n      word: 'swim',\n      translation: 'плавать',\n      image: 'img/swim.jpg',\n      audioSrc: 'audio/swim.mp3'\n    }\n  ],\n  [\n    {\n      word: 'cat',\n      translation: 'кот',\n      image: 'img/cat.jpg',\n      audioSrc: 'audio/cat.mp3'\n    },\n    {\n      word: 'chick',\n      translation: 'цыплёнок',\n      image: 'img/chick.jpg',\n      audioSrc: 'audio/chick.mp3'\n    },\n    {\n      word: 'chicken',\n      translation: 'курица',\n      image: 'img/chicken.jpg',\n      audioSrc: 'audio/chicken.mp3'\n    },\n    {\n      word: 'dog',\n      translation: 'собака',\n      image: 'img/dog.jpg',\n      audioSrc: 'audio/dog.mp3'\n    },\n    {\n      word: 'horse',\n      translation: 'лошадь',\n      image: 'img/horse.jpg',\n      audioSrc: 'audio/horse.mp3'\n    },\n    {\n      word: 'pig',\n      translation: 'свинья',\n      image: 'img/pig.jpg',\n      audioSrc: 'audio/pig.mp3'\n    },\n    {\n      word: 'rabbit',\n      translation: 'кролик',\n      image: 'img/rabbit.jpg',\n      audioSrc: 'audio/rabbit.mp3'\n    },\n    {\n      word: 'sheep',\n      translation: 'овца',\n      image: 'img/sheep.jpg',\n      audioSrc: 'audio/sheep.mp3'\n    }\n  ],\n  [\n    {\n      word: 'bird',\n      translation: 'птица',\n      image: 'img/bird.jpg',\n      audioSrc: 'audio/bird.mp3'\n    },\n    {\n      word: 'fish',\n      translation: 'рыба',\n      image: 'img/fish1.jpg',\n      audioSrc: 'audio/fish.mp3'\n    },\n    {\n      word: 'frog',\n      translation: 'жаба',\n      image: 'img/frog.jpg',\n      audioSrc: 'audio/frog.mp3'\n    },\n    {\n      word: 'giraffe',\n      translation: 'жирафа',\n      image: 'img/giraffe.jpg',\n      audioSrc: 'audio/giraffe.mp3'\n    },\n    {\n      word: 'lion',\n      translation: 'лев',\n      image: 'img/lion.jpg',\n      audioSrc: 'audio/lion.mp3'\n    },\n    {\n      word: 'mouse',\n      translation: 'мышь',\n      image: 'img/mouse.jpg',\n      audioSrc: 'audio/mouse.mp3'\n    },\n    {\n      word: 'turtle',\n      translation: 'черепаха',\n      image: 'img/turtle.jpg',\n      audioSrc: 'audio/turtle.mp3'\n    },\n    {\n      word: 'dolphin',\n      translation: 'дельфин',\n      image: 'img/dolphin.jpg',\n      audioSrc: 'audio/dolphin.mp3'\n    }\n  ],\n  [\n    {\n      word: 'skirt',\n      translation: 'юбка',\n      image: 'img/skirt.jpg',\n      audioSrc: 'audio/skirt.mp3'\n    },\n    {\n      word: 'pants',\n      translation: 'брюки',\n      image: 'img/pants.jpg',\n      audioSrc: 'audio/pants.mp3'\n    },\n    {\n      word: 'blouse',\n      translation: 'блузка',\n      image: 'img/blouse.jpg',\n      audioSrc: 'audio/blouse.mp3'\n    },\n    {\n      word: 'dress',\n      translation: 'платье',\n      image: 'img/dress.jpg',\n      audioSrc: 'audio/dress.mp3'\n    },\n    {\n      word: 'boot',\n      translation: 'ботинок',\n      image: 'img/boot.jpg',\n      audioSrc: 'audio/boot.mp3'\n    },\n    {\n      word: 'shirt',\n      translation: 'рубашка',\n      image: 'img/shirt.jpg',\n      audioSrc: 'audio/shirt.mp3'\n    },\n    {\n      word: 'coat',\n      translation: 'пальто',\n      image: 'img/coat.jpg',\n      audioSrc: 'audio/coat.mp3'\n    },\n    {\n      word: 'shoe',\n      translation: 'туфли',\n      image: 'img/shoe.jpg',\n      audioSrc: 'audio/shoe.mp3'\n    }\n  ],\n  [\n    {\n      word: 'sad',\n      translation: 'грустный',\n      image: 'img/sad.jpg',\n      audioSrc: 'audio/sad.mp3'\n    },\n    {\n      word: 'angry',\n      translation: 'сердитый',\n      image: 'img/angry.jpg',\n      audioSrc: 'audio/angry.mp3'\n    },\n    {\n      word: 'happy',\n      translation: 'счастливый',\n      image: 'img/happy.jpg',\n      audioSrc: 'audio/happy.mp3'\n    },\n    {\n      word: 'tired',\n      translation: 'уставший',\n      image: 'img/tired.jpg',\n      audioSrc: 'audio/tired.mp3'\n    },\n    {\n      word: 'surprised',\n      translation: 'удивлённый',\n      image: 'img/surprised.jpg',\n      audioSrc: 'audio/surprised.mp3'\n    },\n    {\n      word: 'scared',\n      translation: 'испуганный',\n      image: 'img/scared.jpg',\n      audioSrc: 'audio/scared.mp3'\n    },\n    {\n      word: 'smile',\n      translation: 'улыбка',\n      image: 'img/smile.jpg',\n      audioSrc: 'audio/smile.mp3'\n    },\n    {\n      word: 'laugh',\n      translation: 'смех',\n      image: 'img/laugh.jpg',\n      audioSrc: 'audio/laugh.mp3'\n    }\n  ],\n  [\n    {\n      word: 'spider',\n      translation: 'паук',\n      image: 'img/spider.jpg',\n      audioSrc: 'audio/spider.mp3'\n    },\n    {\n      word: 'wasp',\n      translation: 'оса',\n      image: 'img/wasp.jpg',\n      audioSrc: 'audio/wasp.mp3'\n    },\n    {\n      word: 'butterfly',\n      translation: 'бабочка',\n      image: 'img/butterfly.jpg',\n      audioSrc: 'audio/butterfly.mp3'\n    },\n    {\n      word: 'beetle',\n      translation: 'жук',\n      image: 'img/beetle.jpg',\n      audioSrc: 'audio/beetle.mp3'\n    },\n    {\n      word: 'caterpillar',\n      translation: 'гусеница',\n      image: 'img/caterpillar.jpg',\n      audioSrc: 'audio/caterpillar.mp3'\n    },\n    {\n      word: 'ladybird',\n      translation: 'божья коровка',\n      image: 'img/ladybird.jpg',\n      audioSrc: 'audio/ladybird.mp3'\n    },\n    {\n      word: 'ant',\n      translation: 'муравей',\n      image: 'img/ant.jpg',\n      audioSrc: 'audio/ant.mp3'\n    },\n    {\n      word: 'bee',\n      translation: 'пчела',\n      image: 'img/bee.jpg',\n      audioSrc: 'audio/bee.mp3'\n    }\n  ],\n  [\n    {\n      word: 'spoon',\n      translation: 'ложка',\n      image: 'img/spoon.jpg',\n      audioSrc: 'audio/spoon.mp3'\n    },\n    {\n      word: 'fork',\n      translation: 'вилка',\n      image: 'img/fork.jpg',\n      audioSrc: 'audio/fork.mp3'\n    },\n    {\n      word: 'knife',\n      translation: 'нож',\n      image: 'img/knife.jpg',\n      audioSrc: 'audio/knife.mp3'\n    },\n    {\n      word: 'plate',\n      translation: 'тарелка',\n      image: 'img/plate.jpg',\n      audioSrc: 'audio/plate.mp3'\n    },\n    {\n      word: 'glass',\n      translation: 'стакан',\n      image: 'img/glass.jpg',\n      audioSrc: 'audio/glass.mp3'\n    },\n    {\n      word: 'kettle',\n      translation: 'чайник',\n      image: 'img/kettle.jpg',\n      audioSrc: 'audio/kettle.mp3'\n    },\n    {\n      word: 'saltcellar',\n      translation: 'солонка',\n      image: 'img/saltcellar.jpg',\n      audioSrc: 'audio/saltcellar.mp3'\n    },\n    {\n      word: 'cup',\n      translation: 'чашка',\n      image: 'img/cup.jpg',\n      audioSrc: 'audio/cup.mp3'\n    }\n  ]\n]\n","import React from \"react\";\r\nimport { cardCategories } from \"../../../assets/cards\";\r\nimport { Views, linkIcon } from '../../../assets/constants';\r\n\r\nimport './menu.scss';\r\n\r\ninterface MyProps {\r\n  isShow: boolean,\r\n  changeCategory: (page: string) => void\r\n}\r\n\r\ninterface MyState {\r\n  activePage: string,\r\n  isShowPopup: boolean,\r\n  isCorrectPassword: boolean,\r\n  login: string\r\n}\r\n\r\nexport default class MenuItems extends React.Component<MyProps, MyState> {\r\n\r\n  state = {\r\n    activePage: Views.MAIN,\r\n    isShowPopup: false,\r\n    isCorrectPassword: false,\r\n    login: ''\r\n  }\r\n\r\n  toggleClass(nameCategory: string) {\r\n    this.props.changeCategory(nameCategory);\r\n    this.setState({ activePage: nameCategory });\r\n  };\r\n\r\n  openClosePopup() {\r\n    if (this.state.isShowPopup === true) {\r\n      this.setState({ isShowPopup: false })\r\n    } else {\r\n      this.setState({ isShowPopup: true })\r\n    }\r\n  }\r\n  loginInput(event: InputEvent) {\r\n    //if (this.state.login)\r\n    console.log(this.state.login);\r\n\r\n    const target = event.target;\r\n    console.log(target);\r\n\r\n    // const value = target.value;\r\n    // // const name = target.name;\r\n\r\n    // this.setState({\r\n    //   login: value\r\n    // });\r\n    // this.setState({login: })\r\n  }\r\n\r\n\r\n  //validate(event) {}\r\n\r\n  login() {\r\n    //if (this.state.isCorrectPassword === true) {\r\n    this.openClosePopup();\r\n    this.props.changeCategory('Admin');\r\n    console.log('login');\r\n    // }\r\n  }\r\n  cancel() {\r\n    this.openClosePopup();\r\n    console.log('cancel');\r\n  }\r\n\r\n\r\n  render() {\r\n    let menuItems = [{ nameCategory: Views.MAIN, image: linkIcon.HOME },\r\n    ...cardCategories, { nameCategory: Views.STATS, image: linkIcon.STATS }];\r\n\r\n    return (\r\n      <ul className={`menu ${this.props.isShow ? 'menu__translate' : ''}`}>\r\n        {menuItems\r\n          .map((item) =>\r\n            <li key={item.nameCategory}\r\n              className={`menu__link ${item.nameCategory === this.state.activePage ? 'active' : ''}`}\r\n              onClick=\r\n              {() =>\r\n                this.toggleClass(item.nameCategory)\r\n              }>\r\n              <img className='menu__icon' src={item.image} />\r\n              {item.nameCategory}\r\n            </li>)}\r\n        <button className='btn btn__login' onClick={() => this.openClosePopup()} >Login</button>\r\n        <div className={`${this.state.isShowPopup === true ? 'popup-main' : 'display-none'}`}>\r\n          <div className='popup-body'>\r\n            <div className='popup-content'>\r\n              <div className='popup-title'>Login</div>\r\n              <div className='popup-inputs'>\r\n                <p className=\"popup-name-block\">login</p>\r\n                <input required className=\"popup-login-input\" type=\"text\" placeholder=\"login\"\r\n                  value={this.state.login}\r\n                  onChange={() => this.loginInput}\r\n                />\r\n\r\n                <p className=\"popup-name-block\">password </p>\r\n                <input required className=\"popup-login-input\" type=\"password\" placeholder=\"password\"\r\n\r\n                />\r\n                <p className=\"popup-name-block invalid-password\">Invalid password </p>\r\n              </div>\r\n              <div className='popup-control'>\r\n                <button className='btn btn__control__cancel' onClick={() => this.cancel()}>Cancel</button>\r\n                <button className='btn btn__control__login' onClick={() => this.login()}>Login</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </ul>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport BurgerMenu from \"./Menu/burger-menu\";\r\nimport Switcher from \"./Switch/switcher\";\r\nimport MenuItems from \"./Menu/menu-itams\";\r\n\r\nimport './header.scss';\r\n\r\ninterface MyProps {\r\n  changeCategory: (page: string)=>void,\r\n  changeGameModeApp: (gameMode: string)=>void,\r\n  gameModeName: string\r\n}\r\ninterface MyState {\r\n  isShow: boolean\r\n}\r\n\r\nexport default class Header extends React.Component<MyProps, MyState> {\r\n  constructor(props: MyProps){\r\n    super(props);\r\n    this.state = {\r\n      isShow: false\r\n    }\r\n  }\r\n  openCloseMenu() {\r\n    if (this.state.isShow){\r\n      this.setState({isShow: false})\r\n    } else {\r\n      this.setState({isShow: true})\r\n    }\r\n  }\r\n  menuItemsHandler(page: string){\r\n    this.props.changeCategory(page);\r\n    this.openCloseMenu();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <section className='header-field'>\r\n        <div>\r\n          <BurgerMenu clickHandler={()=>this.openCloseMenu()} isShow={this.state.isShow} />\r\n          <MenuItems isShow={this.state.isShow}\r\n            changeCategory={(page:string)=>{this.menuItemsHandler(page)}}\r\n          />\r\n        </div>\r\n        <h1>English for kids</h1>\r\n        <Switcher changeGameModeApp={(gameMode:string)=>{\r\n          this.props.changeGameModeApp(gameMode);}} gameModeName={this.props.gameModeName}\r\n        />\r\n      </section>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { Views, ButtonsNames, linkIcon } from '../../assets/constants';\r\n\r\ninterface MyProps {\r\n  title: string,\r\n  imgSrc: string,\r\n  nameButtonGame: string,\r\n  translation?: string,\r\n  audioSrc?: string,\r\n  activeGameMode?: string,\r\n  changeCategory: (page: string) => void,\r\n  compaireCurrentSound: (sound: string) => boolean,\r\n}\r\ninterface MyState {\r\n  playMode: boolean,\r\n  isFlipped: boolean,\r\n  disabled: boolean\r\n}\r\n\r\nexport default class Card extends React.Component<MyProps, MyState> {\r\n\r\n  state = {\r\n    playMode: false,\r\n    isFlipped: false,\r\n    disabled: false\r\n  }\r\n\r\n  clickCard(title: string) {\r\n\r\n    if (this.props.audioSrc) {\r\n      if (this.props.activeGameMode === Views.PLAY_MODE && this.props.nameButtonGame === ButtonsNames.REPEAT_WORD) {\r\n        if (this.props.compaireCurrentSound(this.props.audioSrc)) {\r\n          this.setState({ disabled: true })\r\n        }\r\n      } else if (this.props.activeGameMode === Views.TRAIN_MODE) {\r\n        this.playAudio(this.props.audioSrc)\r\n      }\r\n    } else {\r\n      this.props.changeCategory(title);\r\n    }\r\n  }\r\n\r\n  playAudio(audioSrc: string) {\r\n    const audio = new Audio();\r\n    audio.src = audioSrc;\r\n    audio.currentTime = 0;\r\n    audio.play();\r\n  }\r\n\r\n  render() {\r\n\r\n    let flippedButton = <div></div>\r\n    let languageTittle = this.props.title\r\n    let displayNone = '';\r\n    let cardModePlay = '';\r\n\r\n    if (this.props.audioSrc) {\r\n      flippedButton =\r\n        <img className={`flipped-button ${this.state.isFlipped ||\r\n          this.props.activeGameMode === 'play' ? 'display-none' : ''}`}\r\n          onClick={() => {\r\n            this.setState({ isFlipped: true })\r\n          }}\r\n          src={linkIcon.ROTATE}\r\n        />\r\n    }\r\n\r\n    if (this.state.isFlipped && this.props.translation) {\r\n      languageTittle = this.props.translation\r\n    }\r\n\r\n    if (this.props.activeGameMode === Views.PLAY_MODE && this.props.translation) {\r\n      cardModePlay = 'card__image__play'\r\n      displayNone = 'display-none';\r\n    } else {\r\n      displayNone = '';\r\n      cardModePlay = '';\r\n    }\r\n\r\n    return (\r\n      <div className=\r\n        {`card-container ${this.state.isFlipped ? 'flipped' : ''} \r\n        ${this.state.disabled ? 'card__disable' : ''}`}\r\n\r\n        onMouseLeave={(() => {\r\n          if (this.state.isFlipped === true) {\r\n            this.setState({ isFlipped: false })\r\n          }\r\n        })}\r\n        onClick={() => this.clickCard(this.props.title)}>\r\n        <div className=\"card\">\r\n          <img className={`${cardModePlay} card__image ${this.state.isFlipped ? 'card__image__flipped' : ''}`}\r\n            src={this.props.imgSrc} />\r\n          <hr className={`${displayNone} card__${this.props.activeGameMode === 'train' ? 'hr-train' : 'hr-play'}`} />\r\n          <p className={`${displayNone} card__name ${this.state.isFlipped ? 'scale' : ''}`}>{languageTittle}</p>\r\n          {flippedButton}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport Card from './Card';\r\nimport { Views, ButtonsNames, linkAudio } from '../../assets/constants';\r\n\r\nimport './cardGrid.scss'\r\n\r\ninterface Categories {\r\n  title: string,\r\n  imgSrc: string,\r\n  translation?: string,\r\n  audioSrc?: string,\r\n  arrSoudsCategory?: string[]\r\n}\r\ninterface MyState {\r\n  nameButtonGame: string,\r\n  currentSound: number\r\n  startGameActivePage: string,\r\n  startGameactiveGameMode: string,\r\n  isGameOver: boolean,\r\n  errorsClick: number\r\n}\r\ninterface MyProps {\r\n  itemsCategories: Categories[],\r\n  activeGameMode: string,\r\n  activePage: string,\r\n  arrSoudsCategory?: string[],\r\n  changeCategory: (page: string) => void,\r\n  countMistakes?: (mistakes: number) => void\r\n}\r\n\r\nexport default class CardGrid extends React.Component<MyProps, MyState> {\r\n\r\n  state = {\r\n    nameButtonGame: ButtonsNames.START_GAME,\r\n    startGameActivePage: '',\r\n    startGameactiveGameMode: '',\r\n    currentSound: 0,\r\n    isGameOver: false,\r\n    errorsClick: 0\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps: MyProps, prevState: MyState) {\r\n    if (nextProps.activeGameMode !== prevState.startGameactiveGameMode ||\r\n      nextProps.activePage !== prevState.startGameActivePage) {\r\n      return { ...prevState, nameButtonGame: ButtonsNames.START_GAME, errorsClick: 0 }\r\n    }\r\n    return {\r\n      ...prevState\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps: MyProps, prevState: MyState) {\r\n    if (this.state.currentSound !== prevState.currentSound) {\r\n      this.playCurrentSound()\r\n    }\r\n  }\r\n\r\n  playAudio(audioSrc: string) {\r\n    const audio = new Audio();\r\n    audio.src = audioSrc;\r\n    audio.currentTime = 0;\r\n    audio.play();\r\n  }\r\n\r\n  compaireCurrentSound = (sound: string): boolean => {\r\n\r\n    if (this.props.arrSoudsCategory &&\r\n      this.props.arrSoudsCategory[this.state.currentSound] === sound) {\r\n      this.playAudio(linkAudio.CORRECT);\r\n      this.setState({ currentSound: this.state.currentSound + 1 });\r\n      return true\r\n    } else {\r\n      this.playAudio(linkAudio.ERROR)\r\n      this.setState({ errorsClick: this.state.errorsClick + 1 })\r\n      return false\r\n    }\r\n  }\r\n\r\n  playCurrentSound() {\r\n    if (this.props.arrSoudsCategory)\r\n      if (this.state.currentSound > this.props.arrSoudsCategory.length - 1) {\r\n        if (this.props.countMistakes)\r\n          this.props.countMistakes(this.state.errorsClick)\r\n        this.setState(\r\n          {\r\n            nameButtonGame: ButtonsNames.START_GAME,\r\n            currentSound: 0,\r\n            isGameOver: true\r\n          }\r\n        )\r\n      } else {\r\n        this.playAudio(this.props.arrSoudsCategory[this.state.currentSound])\r\n      }\r\n  }\r\n\r\n  startGame(activeGameMode: string, activePage: string) {\r\n    this.playCurrentSound()\r\n    this.setState(\r\n      {\r\n        nameButtonGame: ButtonsNames.REPEAT_WORD,\r\n        startGameactiveGameMode: activeGameMode,\r\n        startGameActivePage: activePage\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.isGameOver === true) {\r\n      this.setState({ isGameOver: false });\r\n      this.props.changeCategory(Views.GAMEOVER)\r\n    }\r\n    return (\r\n      <section className='main'>\r\n          <div className=\"cards-field wrapper\">\r\n            {this.props.itemsCategories.map((item) => {\r\n              return (\r\n                <Card\r\n                  key={item.title}\r\n                  activeGameMode={this.props.activeGameMode}\r\n                  title={item.title}\r\n                  imgSrc={item.imgSrc}\r\n                  translation={item.translation}\r\n                  audioSrc={item.audioSrc}\r\n                  changeCategory={(page: string) => {\r\n                    this.props.changeCategory(page)\r\n                  }}\r\n                  compaireCurrentSound={this.compaireCurrentSound}\r\n                  nameButtonGame={this.state.nameButtonGame}\r\n                />)\r\n            })}\r\n          </div>\r\n          <button\r\n            className=\r\n            {\r\n              `button__game${this.props.activeGameMode === 'train' ||\r\n                this.props.activePage === Views.MAIN ? '__none' : ''}`\r\n            }\r\n            onClick={() => {\r\n              this.startGame(this.props.activeGameMode, this.props.activePage)\r\n            }}\r\n          >\r\n            {this.state.nameButtonGame}\r\n          </button>\r\n\r\n      </section>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\n\r\nimport './footer.scss';\r\n\r\nexport default class Footer extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n      <section className='footer-container'>\r\n        <a className=\"github\" href=\"https://github.com/zhenuua\" target=\"_blank\" rel=\"noopener noreferrer\">github</a>\r\n        <a className=\"rss\" href=\"https://rs.school/js/\" target=\"_blank\" rel=\"noopener\">\r\n        <span className=\"rss-year\">'21</span>\r\n        </a>\r\n      </section>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { cardCategories, cards } from '../../assets/cards'\r\n\r\nimport './stats.scss';\r\n\r\ninterface MyState {\r\n}\r\ninterface MyProps {\r\n}\r\n\r\nexport default class Stats extends React.Component<MyProps, MyState> {\r\n\r\n  render() {\r\n    let stringTable: {\r\n      nameCat: string,\r\n      word: string,\r\n      translation: string,\r\n      DEFAULT: number\r\n    };\r\n\r\n    let allStringTable = [];\r\n    let DEFAULT_NUMBER_STATS = 0;\r\n    let indexInCategory = 0;\r\n\r\n    for (let findNameCategory of cardCategories) {\r\n      indexInCategory = cardCategories\r\n        .findIndex((element) => {\r\n          if (findNameCategory.nameCategory === element.nameCategory) {\r\n            return true\r\n          }\r\n        })\r\n      const lendsCards = cards.length;\r\n      for (let i = 0; i < lendsCards; i++) {\r\n        stringTable = {\r\n          nameCat: findNameCategory.nameCategory,\r\n          word: cards[indexInCategory][i].word,\r\n          translation: cards[indexInCategory][i].translation,\r\n          DEFAULT: DEFAULT_NUMBER_STATS\r\n        }\r\n        allStringTable.push(stringTable);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <section className='stats'>\r\n        <div className='stats__control'>\r\n          <button className='stats__control__button'>Repeat difficult words</button>\r\n          <button className='stats__control__button'>Reset</button>\r\n        </div>\r\n        <table className='table__stats'>\r\n          <tr className='table__title'>\r\n            <th>Category</th>\r\n            <th>Word</th>\r\n            <th>Translation</th>\r\n            <th>Trained</th>\r\n            <th>Correct</th>\r\n            <th>InCorrect</th>\r\n            <th>%</th>\r\n          </tr>\r\n\r\n          {allStringTable.map((item) => {\r\n            return (\r\n              <tr className='table__string' key={item.nameCat}>\r\n                <th>{item.nameCat}</th>\r\n                <th>{item.word}</th>\r\n                <th>{item.translation}</th>\r\n                <th>{DEFAULT_NUMBER_STATS}</th>\r\n                <th>{DEFAULT_NUMBER_STATS}</th>\r\n                <th>{DEFAULT_NUMBER_STATS}</th>\r\n                <th>{DEFAULT_NUMBER_STATS}</th>\r\n              </tr>\r\n            )\r\n\r\n          })}\r\n        </table>\r\n      </section>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Views, linkAudio, linkIcon } from '../../assets/constants';\r\n\r\nimport './GameOver.scss';\r\n\r\nconst WINNER_MASSAGE = 'You win!';\r\nconst FAIL_MASSAGE = 'You fail!';\r\nconst SHOW_TIME = 5000;\r\n\r\ninterface MyState {\r\n}\r\ninterface MyProps {\r\n  changeCategory: (page: string) => void,\r\n  mistakes: number\r\n}\r\n\r\nexport default class GameOver extends React.Component<MyProps, MyState> {\r\n  \r\n  playAudio(audioSrc: string) {\r\n    const audio = new Audio();\r\n    audio.src = audioSrc;\r\n    audio.currentTime = 0;\r\n    audio.play();\r\n  }\r\n\r\n  render(){\r\n\r\n    let massage = '';\r\n    let imageSrcGameOver = '';\r\n    let soundSrcGameOver = '';\r\n\r\n    if (this.props.mistakes === 0){\r\n      massage = WINNER_MASSAGE;\r\n      imageSrcGameOver = linkIcon.SUCCESS;\r\n      soundSrcGameOver = linkAudio.WIN;\r\n    } else {\r\n      massage = FAIL_MASSAGE;\r\n      imageSrcGameOver = linkIcon.FAILURE;\r\n      soundSrcGameOver = linkAudio.FAIL;\r\n    }\r\n\r\n    this.playAudio(soundSrcGameOver);\r\n\r\n    let goMainPage: ReturnType<typeof setTimeout>;\r\n    goMainPage = setTimeout(()=>{\r\n      this.props.changeCategory(Views.MAIN);\r\n    }, SHOW_TIME);\r\n\r\n    return (\r\n      <section className='game-over__field'>\r\n        <h1 className='game-over__text'>{massage}</h1>\r\n        <h2 className={`${this.props.mistakes === 0 ? 'display-none' : 'game-over__text'}`}>\r\n          You have: {this.props.mistakes} errors!\r\n        </h2>\r\n        <img className='game-over__image' src={imageSrcGameOver} />\r\n      </section>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { Views } from '../../assets/constants';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter\r\n} from \"react-router-dom\";\r\n\r\nimport Words from './words/words';\r\nimport Categories from './card-category/categories'\r\n\r\ninterface MyState {\r\n}\r\n\r\ninterface MyProps {\r\n\r\n  //history: RouteComponentProps[\"history\"],\r\n\r\n // history : History,\r\n  changeCategory: (page: string) => void,\r\n}\r\n// const ChildComponent : React.SFC<ChildComponentProps> = ({ history }) => (\r\n//   ..\r\n// );\r\n\r\nexport default class AdminHeader extends React.Component<MyProps, MyState> {\r\n\r\n  exitAdmin() {\r\n    console.log('exitAdmin');\r\n    this.props.changeCategory(Views.MAIN)\r\n  }\r\n  goCategories() {\r\n    console.log('goCategories');\r\n  }\r\n  goWords() {\r\n    console.log('goWords');\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <section className='header-admin'>\r\n\r\n        {/* <Switch>\r\n          <Route history={history} path='/home' component={Views.MAIN} />\r\n          <Route history={history} path='/appointments' component={Appointments} />\r\n          <Redirect from='/' to='/home' />\r\n        </Switch> */}\r\n\r\n\r\n        <div className='wrapper header-admin__control'>\r\n          <div className='routing_btn'>\r\n            <button className='btn-admin active' onClick={() => { this.goCategories() }}>Categories</button>\r\n            <button className='btn-admin' onClick={() => { this.goWords() }}>Words</button>\r\n          </div>\r\n\r\n          <button className='btn-admin' onClick={() => { this.exitAdmin() }}>Log out</button>\r\n        </div>\r\n\r\n      </section>\r\n    )\r\n  }\r\n\r\n}","import React from \"react\";\r\n\r\ninterface MyState {\r\n}\r\ninterface MyProps {\r\n}\r\n\r\n\r\nexport default class CardCategoryAdmin extends React.Component<MyProps, MyState> {\r\n\r\n  closeCard() {\r\n    console.log('close category');\r\n\r\n  }\r\n  updateCategory(){\r\n    console.log('updateCategory');\r\n  }\r\n  addWord(){\r\n    console.log('add word');\r\n  }\r\n\r\n  render() {\r\n\r\n    let quantityWordsCategory = 7;\r\n    return (\r\n      <div className='card-admin__category'>\r\n        <img className='close-card' onClick={() => { this.closeCard() }} src='./img/close-category.svg' />\r\n        <h2 className='card-admin-title'>Clothes</h2>\r\n        <p className='quantity-words'>WORDS: {quantityWordsCategory}</p>\r\n        <div className='category-control'>\r\n          <button className='btn-category-control' onClick={() => { this.updateCategory() }}>Update</button>\r\n          <button className='btn-category-control' onClick={() => { this.addWord() }}>Add word</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport CardCategoryAdmin from './cardCategory'\r\n\r\nimport './categories.scss';\r\n\r\ninterface MyState {\r\n}\r\ninterface MyProps {\r\n}\r\n\r\n\r\nexport default class Categories extends React.Component<MyProps, MyState> {\r\n\r\n  createCategory(){\r\n    console.log('createCategory');\r\n    \r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper cards-field\">\r\n\r\n        <CardCategoryAdmin />\r\n        <CardCategoryAdmin />\r\n        <CardCategoryAdmin />\r\n        <CardCategoryAdmin />\r\n        <CardCategoryAdmin />\r\n        <CardCategoryAdmin />\r\n        <CardCategoryAdmin />\r\n        <CardCategoryAdmin />\r\n\r\n\r\n        <div className='card-admin__category'>\r\n          <h2 className='card-admin-title'>Create new Category</h2>\r\n          <div className='btn-category-add'>\r\n            <img onClick={()=>{this.createCategory()}} src='./img/add-category.svg' />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport AdminHeader from './header-admin';\r\nimport Categories from './card-category/categories'\r\n//import CardGrid from './components/MainPage/CardGrid';\r\n\r\nimport { Views } from '../../assets/constants';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from 'history';\r\n\r\n\r\nimport './admin.scss';\r\n\r\n\r\ninterface MyProps {\r\n  changeCategory: (page: string) => void,\r\n}\r\ninterface MyState {\r\n  // activePage: string,\r\n  // activeGameMode: string,\r\n  // mistakes: number\r\n}\r\n\r\nexport default class AdminMain extends React.Component<MyProps, MyState> {\r\n\r\n  // state = {\r\n  //   activePage: Views.MAIN,\r\n  //   activeGameMode: Views.TRAIN_MODE,\r\n  //   mistakes: 0\r\n  // }\r\n\r\n\r\n  render() {\r\n    //const history = createBrowserHistory()\r\n    return (\r\n      <section>\r\n        <AdminHeader\r\n          changeCategory={(category: string) => { this.props.changeCategory(category) }}\r\n        />\r\n        <Categories />\r\n      </section>\r\n      //<Router history={history}>\r\n\r\n      //</Router>\r\n\r\n\r\n\r\n\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Header from './components/Header/header';\r\nimport CardGrid from './components/MainPage/CardGrid';\r\nimport Footer from './components/Footer/footer';\r\nimport Stats from './components/Stats/stats';\r\nimport GameOver from './components/GameOver/GameOver'\r\nimport { cardCategories, cards } from './assets/cards';\r\nimport { Views } from './assets/constants';\r\n\r\nimport AdminMain from './components/AdminPage/App-admin';\r\n\r\nimport './styles.scss'\r\n\r\ninterface MyProps {\r\n}\r\ninterface MyState {\r\n  activePage: string,\r\n  activeGameMode: string,\r\n  mistakes: number\r\n}\r\n\r\nexport default class App extends React.Component<MyProps, MyState> {\r\n\r\n  state = {\r\n    activePage: Views.MAIN,\r\n    activeGameMode: Views.TRAIN_MODE,\r\n    mistakes: 0\r\n  }\r\n\r\n  getItems() {\r\n    return cardCategories.map((item) => {\r\n      return {\r\n        title: item.nameCategory,\r\n        imgSrc: item.image\r\n      }\r\n    })\r\n  }\r\n  getCards(indexCategory: number) {\r\n    return cards[indexCategory].map((item) => {\r\n      return {\r\n        title: item.word,\r\n        imgSrc: item.image,\r\n        translation: item.translation,\r\n        audioSrc: item.audioSrc\r\n      }\r\n    })\r\n  }\r\n  getSoudsCategory(indexCategory: number) {\r\n    let arrSoudsCategory: string[] = []\r\n    for (let i = 0; i < cards[indexCategory].length; i++) {\r\n      arrSoudsCategory.push(cards[indexCategory][i].audioSrc)\r\n    }\r\n    return arrSoudsCategory.sort(() => Math.random() - 0.5);\r\n  }\r\n  changeCategory(category: string) {\r\n    this.setState({ activePage: category })\r\n  }\r\n  changeGameModeApp(gameMode: string) {\r\n    this.setState({ activeGameMode: gameMode })\r\n  }\r\n  countMistakes(mistakes: number) {\r\n    this.setState({ mistakes: mistakes })\r\n  }\r\n\r\n\r\n  render() {\r\n    let indexCategory = cardCategories\r\n      .findIndex((element) => {\r\n        if (this.state.activePage === element.nameCategory) {\r\n          return true\r\n        }\r\n      })\r\n\r\n    let header =\r\n      <Header\r\n        changeCategory={(category: string) => { this.changeCategory(category) }}\r\n        changeGameModeApp={(gameMode: string) => { this.changeGameModeApp(gameMode) }}\r\n        gameModeName={this.state.activeGameMode}\r\n      />\r\n\r\n\r\n    let mainSection =\r\n      <CardGrid\r\n        itemsCategories={this.getItems()}\r\n        changeCategory={(category: string) => { this.changeCategory(category) }}\r\n        activeGameMode={this.state.activeGameMode}\r\n        activePage={this.state.activePage}\r\n      />\r\n    let footer = <Footer />\r\n\r\n\r\n\r\n\r\n    if (this.state.activePage === Views.MAIN) {\r\n      mainSection =\r\n        <CardGrid\r\n          itemsCategories={this.getItems()}\r\n          changeCategory={(category: string) => { this.changeCategory(category) }}\r\n          activeGameMode={this.state.activeGameMode}\r\n          activePage={this.state.activePage}\r\n        />\r\n    } else if (this.state.activePage === Views.ADMIN) { //TODO\r\n      header = <div></div>\r\n      footer = <div></div>\r\n      mainSection =\r\n        <AdminMain\r\n          changeCategory={(category: string) => { this.changeCategory(category) }}\r\n        />\r\n    } else if (this.state.activePage === Views.STATS) {\r\n      mainSection = <Stats />\r\n    } else if (this.state.activePage === Views.GAMEOVER) {\r\n      mainSection =\r\n        <GameOver\r\n          changeCategory={(category: string) => { this.changeCategory(category) }}\r\n          mistakes={this.state.mistakes}\r\n        />\r\n    } else if (this.state.activePage === cardCategories[indexCategory].nameCategory) {\r\n      mainSection =\r\n        <CardGrid\r\n          itemsCategories={this.getCards(indexCategory)}\r\n          changeCategory={(category: string) => { this.changeCategory(category) }}\r\n          activeGameMode={this.state.activeGameMode}\r\n          arrSoudsCategory={this.getSoudsCategory(indexCategory)}\r\n          activePage={this.state.activePage}\r\n          countMistakes={(mistakes: number) => { this.countMistakes(mistakes) }}\r\n        />\r\n    }\r\n\r\n    return (\r\n\r\n      <div className=''>\r\n        {header}\r\n        {mainSection}\r\n        {footer}\r\n      </div>\r\n\r\n    )\r\n  }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\n\nconst history = createBrowserHistory()\n\nReactDOM.render(\n\n <Router history={history}>\n  <App />\n </Router>,\n \n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}